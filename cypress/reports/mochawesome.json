{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 32,
    "pending": 0,
    "failures": 9,
    "start": "2021-09-13T13:38:54.134Z",
    "end": "2021-09-13T13:39:57.567Z",
    "duration": 63433,
    "testsRegistered": 41,
    "passPercent": 78.04878048780488,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c14e7dda-e13c-4ec7-8bce-c9ddb8e01549",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e0b12d70-8967-4157-b84b-c440a5977d93",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 290,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "75859560-06ec-47db-ad86-890037948278",
              "parentUUID": "e0b12d70-8967-4157-b84b-c440a5977d93",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "75859560-06ec-47db-ad86-890037948278"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 290,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0c19e94f-8ec1-4d53-bf67-53c06f08f7da",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 257,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "eec8e42d-bd07-4595-9721-aec2dd868171",
              "parentUUID": "0c19e94f-8ec1-4d53-bf67-53c06f08f7da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 244,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "0a374586-b920-46ea-828c-15ac1a7487d2",
              "parentUUID": "0c19e94f-8ec1-4d53-bf67-53c06f08f7da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 220,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "22a1de11-505a-4305-9b60-0296a425e5b2",
              "parentUUID": "0c19e94f-8ec1-4d53-bf67-53c06f08f7da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 265,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "9e48c69e-2048-4559-85e6-bc9144f85847",
              "parentUUID": "0c19e94f-8ec1-4d53-bf67-53c06f08f7da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "acba8b03-6f0d-40a7-b5ca-e0b4ada79c14",
              "parentUUID": "0c19e94f-8ec1-4d53-bf67-53c06f08f7da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 212,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "85eb05fe-f646-43cd-8321-e8267fbf824e",
              "parentUUID": "0c19e94f-8ec1-4d53-bf67-53c06f08f7da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 178,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "1c7dd849-25ed-497d-95d0-96f482129ca7",
              "parentUUID": "0c19e94f-8ec1-4d53-bf67-53c06f08f7da",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eec8e42d-bd07-4595-9721-aec2dd868171",
            "0a374586-b920-46ea-828c-15ac1a7487d2",
            "22a1de11-505a-4305-9b60-0296a425e5b2",
            "9e48c69e-2048-4559-85e6-bc9144f85847",
            "acba8b03-6f0d-40a7-b5ca-e0b4ada79c14",
            "85eb05fe-f646-43cd-8321-e8267fbf824e",
            "1c7dd849-25ed-497d-95d0-96f482129ca7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1497,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "012f03df-e0fc-4ac7-bad4-e860a06a6129",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "11dfd3e0-3384-4d66-9add-41b8246b7775",
              "parentUUID": "012f03df-e0fc-4ac7-bad4-e860a06a6129",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 305,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "578ee787-79ab-4297-aad5-69ed0e1ddfe1",
              "parentUUID": "012f03df-e0fc-4ac7-bad4-e860a06a6129",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "11dfd3e0-3384-4d66-9add-41b8246b7775",
            "578ee787-79ab-4297-aad5-69ed0e1ddfe1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 407,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "724db4de-7af0-49df-855f-3905103563e4",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 148,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "337aada5-7dc5-40cb-8622-d2a1731dd551",
              "parentUUID": "724db4de-7af0-49df-855f-3905103563e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "11d75bd3-ca64-4bdb-b258-f0bb265b36b8",
              "parentUUID": "724db4de-7af0-49df-855f-3905103563e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 307,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "347eaaa9-dc3b-48e6-bd74-11677dd4add1",
              "parentUUID": "724db4de-7af0-49df-855f-3905103563e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "a2c65b06-fc14-4a92-b2bf-852a3cb4b60d",
              "parentUUID": "724db4de-7af0-49df-855f-3905103563e4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "337aada5-7dc5-40cb-8622-d2a1731dd551",
            "11d75bd3-ca64-4bdb-b258-f0bb265b36b8",
            "347eaaa9-dc3b-48e6-bd74-11677dd4add1",
            "a2c65b06-fc14-4a92-b2bf-852a3cb4b60d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 748,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "23a2d6db-6a36-4040-9294-d7e800026e03",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 414,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "05125ab9-f870-486a-b43b-338b86331578",
              "parentUUID": "23a2d6db-6a36-4040-9294-d7e800026e03",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 397,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "510cf38e-3865-41fe-98ac-d262010ce61b",
              "parentUUID": "23a2d6db-6a36-4040-9294-d7e800026e03",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "05125ab9-f870-486a-b43b-338b86331578",
            "510cf38e-3865-41fe-98ac-d262010ce61b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 811,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "71de538f-cfee-4454-9122-524f4b9aa581",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 149,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "9c2497aa-3bb9-4d15-8335-1ffe42c0084d",
              "parentUUID": "71de538f-cfee-4454-9122-524f4b9aa581",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 97,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "7d43a2e9-23fc-450c-a518-7acb08e35ec7",
              "parentUUID": "71de538f-cfee-4454-9122-524f4b9aa581",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9c2497aa-3bb9-4d15-8335-1ffe42c0084d",
            "7d43a2e9-23fc-450c-a518-7acb08e35ec7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 246,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "74b46e71-96fd-4c3f-bcc8-7eca40f7713b",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 556,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "12649d60-b87d-4f19-beaa-9e3928493529",
              "parentUUID": "74b46e71-96fd-4c3f-bcc8-7eca40f7713b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9595,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "d10789da-3f3d-4bcd-804e-a27edaa28bef",
              "parentUUID": "74b46e71-96fd-4c3f-bcc8-7eca40f7713b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "12649d60-b87d-4f19-beaa-9e3928493529",
            "d10789da-3f3d-4bcd-804e-a27edaa28bef"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10151,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "32455dd0-eaa5-4371-aefd-cc80bf21b8ce",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2507,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "5258ee02-4c63-4568-8f30-e615beba9aca",
              "parentUUID": "32455dd0-eaa5-4371-aefd-cc80bf21b8ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9370,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "338f05f5-01d0-4ec5-8484-292ada204612",
              "parentUUID": "32455dd0-eaa5-4371-aefd-cc80bf21b8ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1812,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "e988e150-fd33-475b-a1df-9fc3d36beeaa",
              "parentUUID": "32455dd0-eaa5-4371-aefd-cc80bf21b8ce",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5258ee02-4c63-4568-8f30-e615beba9aca",
            "338f05f5-01d0-4ec5-8484-292ada204612",
            "e988e150-fd33-475b-a1df-9fc3d36beeaa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13689,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "25074df6-c57f-45ae-8615-bff3cdc3be3a",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "cfe145ff-7e93-42b8-b3dc-d21cb175c519",
              "parentUUID": "25074df6-c57f-45ae-8615-bff3cdc3be3a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 170,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "b1227dc6-7e1c-4d87-a314-6c6b58d33144",
              "parentUUID": "25074df6-c57f-45ae-8615-bff3cdc3be3a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "adc61e86-64df-4136-8be4-36320d99ddc0",
              "parentUUID": "25074df6-c57f-45ae-8615-bff3cdc3be3a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2744,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "3c493640-727a-47c9-9726-05d6e6c4e08b",
              "parentUUID": "25074df6-c57f-45ae-8615-bff3cdc3be3a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cfe145ff-7e93-42b8-b3dc-d21cb175c519",
            "b1227dc6-7e1c-4d87-a314-6c6b58d33144",
            "adc61e86-64df-4136-8be4-36320d99ddc0",
            "3c493640-727a-47c9-9726-05d6e6c4e08b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3215,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "41e0d067-fd98-485a-bd64-0f62668fe131",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 249,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "54ea6af8-a3b8-4179-a40c-ce890458cb64",
              "parentUUID": "41e0d067-fd98-485a-bd64-0f62668fe131",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "66842639-3667-4ec8-a0bf-d8124ab5645e",
              "parentUUID": "41e0d067-fd98-485a-bd64-0f62668fe131",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4309,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:39093/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39093/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39093/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39093/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39093/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39093/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39093/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39093/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39093/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39093/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39093/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39093/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39093/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a9dd4287-3310-43fb-8439-d3c89e9428c6",
              "parentUUID": "41e0d067-fd98-485a-bd64-0f62668fe131",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 250,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {},
              "uuid": "b52331d3-d75f-4e63-b953-50731ac2dbad",
              "parentUUID": "41e0d067-fd98-485a-bd64-0f62668fe131",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4364,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<input#board-size>' to be below of { Object (0, length, ...) }",
                "estack": "CypressError: Timed out retrying: expected '<input#board-size>' to be below of { Object (0, length, ...) }\n    at cypressErr (http://localhost:39093/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39093/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39093/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39093/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39093/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39093/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39093/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39093/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39093/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39093/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39093/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39093/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39093/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "42e8f7ac-9ec3-4601-9407-3fba4f0f5c39",
              "parentUUID": "41e0d067-fd98-485a-bd64-0f62668fe131",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 338,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "0aa04d46-6fd6-42d6-95c5-1c690255bc0f",
              "parentUUID": "41e0d067-fd98-485a-bd64-0f62668fe131",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 357,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "AssertionError: expected false to match /Board inválido!/i",
                "estack": "AssertionError: expected false to match /Board inválido!/i\n    at getRet (http://localhost:39093/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:39093/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:39093/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:39093/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:39093/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:39093/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:39093/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:39093/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39093/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39093/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:39093/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39093/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39093/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39093/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7ed81e2f-5fda-4831-a9df-9924baf76d77",
              "parentUUID": "41e0d067-fd98-485a-bd64-0f62668fe131",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4798,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.\n    at cypressErr (http://localhost:39093/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39093/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39093/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39093/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39093/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39093/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39093/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39093/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39093/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39093/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39093/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39093/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39093/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "41f5e85b-9dc2-454b-9eef-d5d6926c3880",
              "parentUUID": "41e0d067-fd98-485a-bd64-0f62668fe131",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4817,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.\n    at cypressErr (http://localhost:39093/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39093/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39093/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39093/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39093/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39093/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39093/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39093/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39093/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39093/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39093/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39093/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39093/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e9eb1c10-761e-44ff-ac36-a105da184287",
              "parentUUID": "41e0d067-fd98-485a-bd64-0f62668fe131",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "54ea6af8-a3b8-4179-a40c-ce890458cb64",
            "66842639-3667-4ec8-a0bf-d8124ab5645e",
            "b52331d3-d75f-4e63-b953-50731ac2dbad",
            "0aa04d46-6fd6-42d6-95c5-1c690255bc0f"
          ],
          "failures": [
            "a9dd4287-3310-43fb-8439-d3c89e9428c6",
            "42e8f7ac-9ec3-4601-9407-3fba4f0f5c39",
            "7ed81e2f-5fda-4831-a9df-9924baf76d77",
            "41f5e85b-9dc2-454b-9eef-d5d6926c3880",
            "e9eb1c10-761e-44ff-ac36-a105da184287"
          ],
          "pending": [],
          "skipped": [],
          "duration": 19596,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c3795690-ee99-4336-aeeb-02b413766595",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4862,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:39093/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39093/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39093/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39093/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39093/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39093/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39093/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39093/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39093/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39093/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39093/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39093/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39093/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9d8be4ce-cd12-41b4-af86-321b69193876",
              "parentUUID": "c3795690-ee99-4336-aeeb-02b413766595",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 670,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "7c9bd899-b4f7-4f65-bf6f-dd2ec5e3358f",
              "parentUUID": "c3795690-ee99-4336-aeeb-02b413766595",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4725,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:39093/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:39093/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:39093/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:39093/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:39093/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:39093/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39093/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39093/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:39093/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:39093/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39093/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39093/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39093/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "92264945-cc05-495f-88fd-9cec37d113e8",
              "parentUUID": "c3795690-ee99-4336-aeeb-02b413766595",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7c9bd899-b4f7-4f65-bf6f-dd2ec5e3358f"
          ],
          "failures": [
            "9d8be4ce-cd12-41b4-af86-321b69193876",
            "92264945-cc05-495f-88fd-9cec37d113e8"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10257,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2cfe46c6-0473-4919-b1b6-6adcb6e3f9d5",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 686,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:39093/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:39093/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:39093/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:39093/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:39093/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:39093/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:39093/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:39093/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39093/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39093/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:39093/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39093/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39093/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39093/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "03e26169-40e8-4bad-867f-2f9dc70333d3",
              "parentUUID": "2cfe46c6-0473-4919-b1b6-6adcb6e3f9d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 576,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:39093/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:39093/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:39093/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:39093/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:39093/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:39093/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:39093/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:39093/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39093/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:39093/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:39093/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:39093/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39093/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:39093/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "133bb15b-8b4d-4f62-9fd1-0dd0627ef6d1",
              "parentUUID": "2cfe46c6-0473-4919-b1b6-6adcb6e3f9d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "03e26169-40e8-4bad-867f-2f9dc70333d3",
            "133bb15b-8b4d-4f62-9fd1-0dd0627ef6d1"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1262,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}